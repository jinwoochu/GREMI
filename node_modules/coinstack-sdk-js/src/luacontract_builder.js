var Promise = require('promise');
var crypto = require('crypto')
var TransactionBuilder = require('./tx_builder.js')
var BitcoinMath = require('./math.js')

function LuaContractBuilder(client) {
    this.client = client
    this.fee = BitcoinMath.toSatoshi("0.0001") // default fee
    return this;
}

LuaContractBuilder.prototype.setInput = function (fromAddress) {
    this.fromAddress = fromAddress;
    return this;
}

LuaContractBuilder.prototype.setContractID = function (contractID) {
    this.contractID = contractID;
    return this
}

LuaContractBuilder.prototype.setFee = function (amount) {
    this.fee = amount;
    return this
}

LuaContractBuilder.prototype.setDefinition = function (body) {
    if (this.definition || this.execution) {
        throw new Error("Duplicate definition")
    }
    this.definition = body;
    return this;
}

LuaContractBuilder.prototype.setExecution = function (body) {
    if (this.definition || this.execution) {
        throw new Error("Duplicate execution")
    }
    this.execution = body;
    return this;
}

LuaContractBuilder.prototype.buildTransaction = function (callback) {
    var txBuilder = this.client.createTransactionBuilder();
    txBuilder.setInput(this.fromAddress);
    // create data payload
    var payload = "4f43" + "0100";
    var code = null;
    if (this.definition) {
        payload += "0001";
        code = this.definition;
    } else if (this.execution) {
        payload += "0002";
        code = this.execution;
    } else {
        throw new Error("Contract definition or execution not defined")
    }

    var body = "{\"type\":\"LSC\",\"body\":\"" + new Buffer(code).toString('base64') + "\"}";

    body = "data:text/plain;charset=utf-8;base64," + new Buffer(body).toString('base64');

    var hash = crypto.createHash("sha256").update(body, 'utf8').digest().toString('hex');

    payload = payload + hash + new Buffer(body, 'utf8').toString('hex');

    txBuilder.addOutput(this.contractID, BitcoinMath.toSatoshi(0.0001));
    txBuilder.setDataOutput(payload);
    txBuilder.setFee(this.fee);

    return txBuilder.buildTransaction(callback);
}

module.exports = LuaContractBuilder;